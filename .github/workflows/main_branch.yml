name: Code Checks

on:
  pull_request:
    branches:
      - main

env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}

#permissions:
#  contents: read

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint pylint-odoo isort
 
      - name: Run flake8
        run: flake8 --config .flake8 ./openacademy ./mobilephones

      - name: Run pylint
        run: pylint --rcfile=.pylintrc --load-plugins=pylint_odoo --valid-odoo-versions=18.0 ./openacademy ./mobilephones

      - name: Run isort check
        run: isort --check-only --diff ./openacademy ./mobilephones

  build_and_tests:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    needs: linters

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_HOST: localhost
      DB_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Odoo image
        run: docker compose build web

      - name: Run Odoo tests
        run: |
          docker compose run --rm web \
            python3 odoo/odoo-bin \
              --db-host=$DB_HOST \
              --db-port=$DB_PORT \
              --db-user=$DB_USER \
              --db-password=$DB_PASSWORD \
              -d $DB_NAME \
              -i mobilephones,openacademy \
              --test-tags /mobilephones,/openacademy \
              --stop-after-init
